电子词典
参考代码：day17/dict
功能说明
用户可以登录和注册
* 登录凭借用户名和密码登录
* 注册要求用户必须填写用户名，密码，其他内容自定
* 用户名要求不能重复
* 要求用户信息能够长期保存
可以通过基本的图形界面print以提示客户端输入。
* 程序分为服务端和客户端两部分
* 客户端通过print打印简单界面输入命令发起请求
* 服务端主要负责逻辑数据处理
* 启动服务端后应该能满足多个客户端同时操作
2019/8/13 project
file:///C:/Users/Python/Desktop/项目综合/project.html 13/14
客户端启动后即进入一级界面，包含如下功能：登录 注册 退出
* 退出后即退出该软件
* 登录成功即进入二级界面，失败回到一级界面
* 注册成功可以回到一级界面继续登录，也可以直接用注册用户进入二级界面
用户登录后进入二级界面，功能如下：查单词 历史记录 注销
殊符号退出单词查询状态
* 历史记录：查询当前用户的查词记录，要求记录包含name word time。
可以查看所有记录或者前10条均可。

在线词典
1.确定好技术方案（套接字，并发，细节确定）
*tcp套接字
*多进程并发Process
*pymysql模块建立数据库连接

2.数据表建立（dict:words）
*用户信息数据表 user-->（id,name,password）
*单词数据表-已建立 words-->（id,word,mean）
*历史记录数据表 hist-->（id,name,word,time）

3.结构设计：几个模块 封装设计
*客户端
*服务端:逻辑请求处理   数据库操作处理
 函数封装：直接写一个功能程序提供给使用者使用，使用者直接运行，而不是需要使用我代码的某一部分。

4.功能分析和通信搭建
    并发通信
    登录
    注册
    查单词
    历史记录

5.罗列功能逻辑（每个功能确定服务端和客户端该做什么，编写代码测试）
一级界面
    *注册
        客户端：
        1.输入用户信息（name,password）
        2.提交信息到数据库注册
        3.注册成功回到一级界面登录，注册失败继续循环等待注册或按q回到一级界面登录

        服务端：
        1.接收客户端提交的注册信息
        2.查找（select）用户信息数据表是否存在用户名
        3.存在则反馈注册失败信息，不存在保存用户信息（id,name,password）
        4.失败回到注册界面，成功回到一级界面--登录

    *登录
        客户端：
        1.输入用户信息（name,password）
        2.提交信息到数据库

        服务端：
        1.接收客户端提交的注册信息
        2.查找（select）用户信息数据表：用户名和密码是否同时存在并一致
        3.存在并一致则登录成功，进入二级界面
        4.失败发送登录失败信息，并回到登录界面

    *退出
        客户端：
        1.按q退出
        2.提交退出请求
        3.服务器确认后完成退出

        服务端：
        1.接受退出请求
        2.断开数据库连接，关闭客户端套接字
        3.发送可以退出信息

二级界面
    *查询单词
        客户端：
        1.输入查询单词并提交服务端
        2.接收服务端反馈查询结果

        服务端：
        1.接收客户端查询请求
        2.提交请求至数据库进行查找
        3.存在单词则返回mean,不存在则反馈“没有该单词”
        4.保存查询记录至历史记录数据表（id,name,word,time）

    *查看历史记录
        客户端：
        1.提交查看历史记录请求至服务端
        2.接收服务端反馈查询历史记录结果

        服务端：
        1.接收客户端提交查询历史记录请求
        2.将历史记录数据表前10条查询（select）结果发送给客户端，fetchmany(10)

    *注销
        客户端：
        1.按q注销
        2.返回一级界面

客户端服务端协议
    注册  R
    登录  L
    查单词 Q
    历史记录    H
    退出  E




